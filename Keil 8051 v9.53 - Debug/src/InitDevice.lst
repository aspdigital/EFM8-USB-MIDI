C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.53\BIN\C51.
                    -exe /Users/andy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) 
                    -WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Users/andy/Projects
                    -/Workspaces/SiLabs_8051/EFM8-USB-MIDI/inc/config;/Users/andy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/inc;/Users/an
                    -dy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/midi;/Users/andy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/lib/efm8
                    -ub2/peripheralDrivers/inc;/Users/andy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/lib/efm8ub2_slstk2001a/bsp;/Users/an
                    -dy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/lib/bsp;/Users/andy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/usb_a
                    -udio/inc;/Users/andy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/lib/efm8_usb/inc;/Users/andy/Projects/Workspaces/SiLa
                    -bs_8051/EFM8-USB-MIDI/lib/efm8_assert;/Users/andy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/lib/bsp/efm8_memory_lcd/
                    -inc;/Users/andy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/lib/bsp/efm8_memory_lcd/inc/config;/Users/andy/Projects/Wo
                    -rkspaces/SiLabs_8051/EFM8-USB-MIDI/lib/bsp/efm8_memory_lcd/inc/graphics;/Users/andy/Projects/Workspaces/SiLabs_8051/EFM8
                    --USB-MIDI/lib/bsp/efm8_joystick;/Users/andy/Projects/Workspaces/SiLabs_8051/EFM8-USB-MIDI/lib/bsp/efm8_rgb_led;/Applicat
                    -ions/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.1.6//Device/shared/si8051Base;/Applications/Simplicit
                    -y Studio.app/Contents/Eclipse/developer/sdks/8051/v4.1.6//Device/EFM8UB2/inc) PRINT(.\src/InitDevice.lst) COND PAGEWIDTH
                    -(120) PAGELENGTH(65) OA OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8UB2_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          #include "efm8_usb.h"
  18          #include "descriptors.h"
  19          #include "usb_0.h"
  20          // [Library Includes]$
  21          
  22          //==============================================================================
  23          // enter_DefaultMode_from_RESET
  24          //==============================================================================
  25          extern void enter_DefaultMode_from_RESET(void) {
  26   1              // $[Config Calls]
  27   1              // Save the SFRPAGE
  28   1              uint8_t SFRPAGE_save = SFRPAGE;
  29   1              PCA_0_enter_DefaultMode_from_RESET();
  30   1              PCACH_0_enter_DefaultMode_from_RESET();
  31   1              PCACH_1_enter_DefaultMode_from_RESET();
  32   1              PCACH_2_enter_DefaultMode_from_RESET();
  33   1              PCACH_4_enter_DefaultMode_from_RESET();
  34   1              PORTS_0_enter_DefaultMode_from_RESET();
  35   1              PORTS_1_enter_DefaultMode_from_RESET();
  36   1              PORTS_2_enter_DefaultMode_from_RESET();
  37   1              PORTS_3_enter_DefaultMode_from_RESET();
  38   1              PORTS_4_enter_DefaultMode_from_RESET();
  39   1              PBCFG_0_enter_DefaultMode_from_RESET();
  40   1              ADC_0_enter_DefaultMode_from_RESET();
  41   1              VREF_0_enter_DefaultMode_from_RESET();
  42   1              HFOSC_0_enter_DefaultMode_from_RESET();
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 2   

  43   1              CLOCK_0_enter_DefaultMode_from_RESET();
  44   1              CIP51_0_enter_DefaultMode_from_RESET();
  45   1              TIMER01_0_enter_DefaultMode_from_RESET();
  46   1              TIMER16_3_enter_DefaultMode_from_RESET();
  47   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  48   1              SPI_0_enter_DefaultMode_from_RESET();
  49   1              UARTE_1_enter_DefaultMode_from_RESET();
  50   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  51   1              USBLIB_0_enter_DefaultMode_from_RESET();
  52   1              // Restore the SFRPAGE
  53   1              SFRPAGE = SFRPAGE_save;
  54   1              // [Config Calls]$
  55   1      
  56   1      }
  57          
  58          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
  59   1              // $[PCA0MD - PCA Mode]
  60   1              /***********************************************************************
  61   1               - Disable Watchdog Timer
  62   1               - System clock
  63   1               - PCA continues to function normally while the system controller is in
  64   1               Idle Mode
  65   1               - Disable the CF interrupt
  66   1               - Disable Watchdog Timer
  67   1               - Watchdog Timer Enable unlocked
  68   1               ***********************************************************************/
  69   1              SFRPAGE = 0x00;
  70   1              PCA0MD &= ~PCA0MD_WDTE__BMASK;
  71   1              PCA0MD = PCA0MD_CPS__SYSCLK | PCA0MD_CIDL__NORMAL
  72   1                              | PCA0MD_ECF__OVF_INT_DISABLED | PCA0MD_WDTE__DISABLED
  73   1                              | PCA0MD_WDLCK__UNLOCKED;
  74   1              // [PCA0MD - PCA Mode]$
  75   1      
  76   1              // $[PCA0H - PCA Counter/Timer High Byte]
  77   1              // [PCA0H - PCA Counter/Timer High Byte]$
  78   1      
  79   1              // $[PCA0L - PCA Counter/Timer Low Byte]
  80   1              // [PCA0L - PCA Counter/Timer Low Byte]$
  81   1      
  82   1              // $[PCA0CN0 - PCA Control 0]
  83   1              /***********************************************************************
  84   1               - Start the PCA Counter/Timer running
  85   1               ***********************************************************************/
  86   1              PCA0CN0 |= PCA0CN0_CR__RUN;
  87   1              // [PCA0CN0 - PCA Control 0]$
  88   1      
  89   1      }
  90          
  91          extern void PCACH_4_enter_DefaultMode_from_RESET(void) {
  92   1              // $[PCA0CPM4 - PCA Channel 4 Capture/Compare Mode]
  93   1              /***********************************************************************
  94   1               - Disable negative edge capture
  95   1               - Disable CCF4 interrupts
  96   1               - Enable match function
  97   1               - 8-bit PWM selected
  98   1               - Disable positive edge capture
  99   1               - Disable comparator function
 100   1               - Disable PWM function
 101   1               - Disable toggle function
 102   1               ***********************************************************************/
 103   1              PCA0CPM4 = PCA0CPM4_CAPN__DISABLED | PCA0CPM4_ECCF__DISABLED
 104   1                              | PCA0CPM4_MAT__ENABLED | PCA0CPM4_PWM16__8_BIT
 105   1                              | PCA0CPM4_CAPP__DISABLED | PCA0CPM4_ECOM__DISABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 3   

 106   1                              | PCA0CPM4_PWM__DISABLED | PCA0CPM4_TOG__DISABLED;
 107   1              // [PCA0CPM4 - PCA Channel 4 Capture/Compare Mode]$
 108   1      
 109   1              // $[PCA0CPL4 - PCA Channel 4 Capture Module Low Byte]
 110   1              // [PCA0CPL4 - PCA Channel 4 Capture Module Low Byte]$
 111   1      
 112   1              // $[PCA0CPH4 - PCA Channel 4 Capture Module High Byte]
 113   1              PCA0CPH4 = 0x00;
 114   1              // [PCA0CPH4 - PCA Channel 4 Capture Module High Byte]$
 115   1      
 116   1              // $[PCA0 Start/Run restore]
 117   1              // [PCA0 Start/Run restore]$
 118   1      
 119   1      }
 120          
 121          extern void HFOSC_0_enter_DefaultMode_from_RESET(void) {
 122   1              // $[HFO0CN - High Frequency Oscillator Control]
 123   1              /***********************************************************************
 124   1               - SYSCLK can be derived from Internal H-F Oscillator divided by 1 
 125   1               ***********************************************************************/
 126   1              HFO0CN |= HFO0CN_IFCN__SYSCLK_DIV_1;
 127   1              // [HFO0CN - High Frequency Oscillator Control]$
 128   1      
 129   1      }
 130          
 131          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 132   1              // $[CLKSEL - Clock Select]
 133   1              /***********************************************************************
 134   1               - Clock 
 135   1               - USB clock 
 136   1               - Enabling the Crossbar SYSCLK signal outputs SYSCLK
 137   1               ***********************************************************************/
 138   1              CLKSEL = CLKSEL_CLKSL__HFOSC_DIV_2 | CLKSEL_USBCLK__HFOSC
 139   1                              | CLKSEL_OUTCLK__SYSCLK;
 140   1              // [CLKSEL - Clock Select]$
 141   1      
 142   1      }
 143          
 144          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 145   1              // $[Timer Initialization]
 146   1              //Save Timer Configuration
 147   1              uint8_t TCON_save;
 148   1              TCON_save = TCON;
 149   1              //Stop Timers
 150   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 151   1      
 152   1              // [Timer Initialization]$
 153   1      
 154   1              // $[TH0 - Timer 0 High Byte]
 155   1              /***********************************************************************
 156   1               - Timer 0 High Byte = 0x06
 157   1               ***********************************************************************/
 158   1              TH0 = (0x06 << TH0_TH0__SHIFT);
 159   1              // [TH0 - Timer 0 High Byte]$
 160   1      
 161   1              // $[TL0 - Timer 0 Low Byte]
 162   1              /***********************************************************************
 163   1               - Timer 0 Low Byte = 0x06
 164   1               ***********************************************************************/
 165   1              TL0 = (0x06 << TL0_TL0__SHIFT);
 166   1              // [TL0 - Timer 0 Low Byte]$
 167   1      
 168   1              // $[TH1 - Timer 1 High Byte]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 4   

 169   1              // [TH1 - Timer 1 High Byte]$
 170   1      
 171   1              // $[TL1 - Timer 1 Low Byte]
 172   1              // [TL1 - Timer 1 Low Byte]$
 173   1      
 174   1              // $[Timer Restoration]
 175   1              //Restore Timer Configuration
 176   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 177   1      
 178   1              // [Timer Restoration]$
 179   1      
 180   1      }
 181          
 182          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 183   1              // $[CKCON0 - Clock Control 0]
 184   1              /***********************************************************************
 185   1               - System clock divided by 48
 186   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 187   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 188   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 189   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 190   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 191   1               - Timer 1 uses the clock defined by the prescale field, SCA
 192   1               ***********************************************************************/
 193   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 194   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 195   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 196   1                              | CKCON0_T1M__PRESCALE;
 197   1              // [CKCON0 - Clock Control 0]$
 198   1      
 199   1              // $[CKCON1 - Clock Control 1]
 200   1              // [CKCON1 - Clock Control 1]$
 201   1      
 202   1              // $[TMOD - Timer 0/1 Mode]
 203   1              /***********************************************************************
 204   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 205   1               - Mode 0, 13-bit Counter/Timer
 206   1               - Timer Mode
 207   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 208   1               - Timer Mode
 209   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 210   1               ***********************************************************************/
 211   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 212   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 213   1              // [TMOD - Timer 0/1 Mode]$
 214   1      
 215   1              // $[TCON - Timer 0/1 Control]
 216   1              /***********************************************************************
 217   1               - Start Timer 0 running
 218   1               ***********************************************************************/
 219   1              TCON |= TCON_TR0__RUN;
 220   1              // [TCON - Timer 0/1 Control]$
 221   1      
 222   1      }
 223          
 224          extern void UARTE_1_enter_DefaultMode_from_RESET(void) {
 225   1              // $[SBCON1 - UART1 Baud Rate Generator Control]
 226   1              /***********************************************************************
 227   1               - Enable the baud rate generator
 228   1               - Prescaler = 12
 229   1               ***********************************************************************/
 230   1              SBCON1 = SBCON1_BREN__ENABLED | SBCON1_BPS__DIV_BY_12;
 231   1              // [SBCON1 - UART1 Baud Rate Generator Control]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 5   

 232   1      
 233   1              // $[SMOD1 - UART1 Mode]
 234   1              // [SMOD1 - UART1 Mode]$
 235   1      
 236   1              // $[SBRLH1 - UART1 Baud Rate Generator High Byte]
 237   1              /***********************************************************************
 238   1               - UART1 Baud Rate Reload High = 0xFF
 239   1               ***********************************************************************/
 240   1              SBRLH1 = (0xFF << SBRLH1_BRH__SHIFT);
 241   1              // [SBRLH1 - UART1 Baud Rate Generator High Byte]$
 242   1      
 243   1              // $[SBRLL1 - UART1 Baud Rate Generator Low Byte]
 244   1              /***********************************************************************
 245   1               - UART1 Baud Rate Reload Low = 0xE0
 246   1               ***********************************************************************/
 247   1              SBRLL1 = (0xE0 << SBRLL1_BRL__SHIFT);
 248   1              // [SBRLL1 - UART1 Baud Rate Generator Low Byte]$
 249   1      
 250   1              // $[SCON1 - UART1 Serial Port Control]
 251   1              /***********************************************************************
 252   1               - UART1 reception enabled
 253   1               ***********************************************************************/
 254   1              SCON1 |= SCON1_REN__RECEIVE_ENABLED;
 255   1              // [SCON1 - UART1 Serial Port Control]$
 256   1      
 257   1      }
 258          
 259          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 260   1              // $[EIE1 - Extended Interrupt Enable 1]
 261   1              /***********************************************************************
 262   1               - Disable ADC0 Conversion Complete interrupt
 263   1               - Disable ADC0 Window Comparison interrupt
 264   1               - Disable CP0 interrupts
 265   1               - Disable CP1 interrupts
 266   1               - Disable all PCA0 interrupts
 267   1               - Disable all SMB0 interrupts
 268   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 269   1               - Enable interrupt requests generated by USB0
 270   1               ***********************************************************************/
 271   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 272   1                              | EIE1_ECP1__DISABLED | EIE1_EPCA0__DISABLED | EIE1_ESMB0__DISABLED
 273   1                              | EIE1_ET3__ENABLED | EIE1_EUSB0__ENABLED;
 274   1              // [EIE1 - Extended Interrupt Enable 1]$
 275   1      
 276   1              // $[EIP1 - Extended Interrupt Priority 1]
 277   1              // [EIP1 - Extended Interrupt Priority 1]$
 278   1      
 279   1              // $[IE - Interrupt Enable]
 280   1              /***********************************************************************
 281   1               - Enable each interrupt according to its individual mask setting
 282   1               - Disable external interrupt 0
 283   1               - Disable external interrupt 1
 284   1               - Enable interrupt requests generated by SPI0
 285   1               - Disable all Timer 0 interrupt
 286   1               - Disable all Timer 1 interrupt
 287   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 288   1               - Disable UART0 interrupt
 289   1               ***********************************************************************/
 290   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 291   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 292   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 293   1              // [IE - Interrupt Enable]$
 294   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 6   

 295   1              // $[IP - Interrupt Priority]
 296   1              // [IP - Interrupt Priority]$
 297   1      
 298   1              // $[EIE2 - Extended Interrupt Enable 2]
 299   1              /***********************************************************************
 300   1               - Disable all SMB1 interrupts
 301   1               - Disable Timer 4interrupts
 302   1               - Disable Timer 5 interrupts
 303   1               - Enable UART1 interrupt
 304   1               - Disable all VBUS interrupts
 305   1               ***********************************************************************/
 306   1              EIE2 = EIE2_ESMB1__DISABLED | EIE2_ET4__DISABLED | EIE2_ET5__DISABLED
 307   1                              | EIE2_ES1__ENABLED | EIE2_EVBUS__DISABLED;
 308   1              // [EIE2 - Extended Interrupt Enable 2]$
 309   1      
 310   1              // $[EIP2 - Extended Interrupt Priority 2]
 311   1              // [EIP2 - Extended Interrupt Priority 2]$
 312   1      
 313   1      }
 314          
 315          extern void USBLIB_0_enter_DefaultMode_from_RESET(void) {
 316   1              // $[USBD Init]
 317   1              USBD_Init (&initstruct);
 318   1              // [USBD Init]$
 319   1      
 320   1      }
 321          
 322          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 323   1              // $[P1 - Port 1 Pin Latch]
 324   1              // [P1 - Port 1 Pin Latch]$
 325   1      
 326   1              // $[P1MDOUT - Port 1 Output Mode]
 327   1              /***********************************************************************
 328   1               - P1.0 output is push-pull
 329   1               - P1.1 output is open-drain
 330   1               - P1.2 output is open-drain
 331   1               - P1.3 output is open-drain
 332   1               - P1.4 output is open-drain
 333   1               - P1.5 output is open-drain
 334   1               - P1.6 output is push-pull
 335   1               - P1.7 output is push-pull
 336   1               ***********************************************************************/
 337   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 338   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 339   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 340   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__PUSH_PULL;
 341   1              // [P1MDOUT - Port 1 Output Mode]$
 342   1      
 343   1              // $[P1MDIN - Port 1 Input Mode]
 344   1              /***********************************************************************
 345   1               - P1.0 pin is configured for digital mode
 346   1               - P1.1 pin is configured for digital mode
 347   1               - P1.2 pin is configured for digital mode
 348   1               - P1.3 pin is configured for digital mode
 349   1               - P1.4 pin is configured for digital mode
 350   1               - P1.5 pin is configured for analog mode
 351   1               - P1.6 pin is configured for digital mode
 352   1               - P1.7 pin is configured for digital mode
 353   1               ***********************************************************************/
 354   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 355   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__ANALOG
 356   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__DIGITAL;
 357   1              // [P1MDIN - Port 1 Input Mode]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 7   

 358   1      
 359   1              // $[P1SKIP - Port 1 Skip]
 360   1              /***********************************************************************
 361   1               - P1.0 pin is not skipped by the crossbar
 362   1               - P1.1 pin is skipped by the crossbar
 363   1               - P1.2 pin is skipped by the crossbar
 364   1               - P1.3 pin is skipped by the crossbar
 365   1               - P1.4 pin is skipped by the crossbar
 366   1               - P1.5 pin is skipped by the crossbar
 367   1               - P1.6 pin is not skipped by the crossbar
 368   1               - P1.7 pin is not skipped by the crossbar
 369   1               ***********************************************************************/
 370   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 371   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 372   1                              | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__NOT_SKIPPED;
 373   1              // [P1SKIP - Port 1 Skip]$
 374   1      
 375   1      }
 376          
 377          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 378   1              // $[XBR1 - Port I/O Crossbar 1]
 379   1              /***********************************************************************
 380   1               - Weak Pullups enabled 
 381   1               - Crossbar enabled
 382   1               - CEX0, CEX1, CEX2 routed to Port pins
 383   1               - ECI unavailable at Port pin
 384   1               - T0 unavailable at Port pin
 385   1               - T1 unavailable at Port pin
 386   1               ***********************************************************************/
 387   1              XBR1 = XBR1_WEAKPUD__PULL_UPS_ENABLED | XBR1_XBARE__ENABLED
 388   1                              | XBR1_PCA0ME__CEX0_CEX1_CEX2 | XBR1_ECIE__DISABLED
 389   1                              | XBR1_T0E__DISABLED | XBR1_T1E__DISABLED;
 390   1              // [XBR1 - Port I/O Crossbar 1]$
 391   1      
 392   1              // $[XBR0 - Port I/O Crossbar 0]
 393   1              /***********************************************************************
 394   1               - UART0 I/O unavailable at Port pin
 395   1               - SPI I/O routed to Port pins
 396   1               - SMBus 0 I/O unavailable at Port pins
 397   1               - CP0 unavailable at Port pin
 398   1               - Asynchronous CP0 unavailable at Port pin
 399   1               - CP1 unavailable at Port pin
 400   1               - Asynchronous CP1 unavailable at Port pin
 401   1               - SYSCLK unavailable at Port pin
 402   1               ***********************************************************************/
 403   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 404   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 405   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 406   1              // [XBR0 - Port I/O Crossbar 0]$
 407   1      
 408   1              // $[XBR2 - Port I/O Crossbar 2]
 409   1              /***********************************************************************
 410   1               - UART1 TX, RX routed to Port pins
 411   1               - SMBus1 I/O unavailable at Port pins
 412   1               ***********************************************************************/
 413   1              XBR2 = XBR2_URT1E__ENABLED | XBR2_SMB1E__DISABLED;
 414   1              // [XBR2 - Port I/O Crossbar 2]$
 415   1      
 416   1      }
 417          
 418          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 419   1              // $[SCON0 - UART0 Serial Port Control]
 420   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 8   

 421   1               - UART0 reception enabled
 422   1               ***********************************************************************/
 423   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 424   1              // [SCON0 - UART0 Serial Port Control]$
 425   1      
 426   1      }
 427          
 428          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 429   1              // $[P0 - Port 0 Pin Latch]
 430   1              // [P0 - Port 0 Pin Latch]$
 431   1      
 432   1              // $[P0MDOUT - Port 0 Output Mode]
 433   1              /***********************************************************************
 434   1               - P0.0 output is push-pull
 435   1               - P0.1 output is push-pull
 436   1               - P0.2 output is open-drain
 437   1               - P0.3 output is open-drain
 438   1               - P0.4 output is open-drain
 439   1               - P0.5 output is open-drain
 440   1               - P0.6 output is push-pull
 441   1               - P0.7 output is open-drain
 442   1               ***********************************************************************/
 443   1              P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__PUSH_PULL
 444   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 445   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 446   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 447   1              // [P0MDOUT - Port 0 Output Mode]$
 448   1      
 449   1              // $[P0MDIN - Port 0 Input Mode]
 450   1              // [P0MDIN - Port 0 Input Mode]$
 451   1      
 452   1              // $[P0SKIP - Port 0 Skip]
 453   1              /***********************************************************************
 454   1               - P0.0 pin is skipped by the crossbar
 455   1               - P0.1 pin is skipped by the crossbar
 456   1               - P0.2 pin is skipped by the crossbar
 457   1               - P0.3 pin is skipped by the crossbar
 458   1               - P0.4 pin is skipped by the crossbar
 459   1               - P0.5 pin is skipped by the crossbar
 460   1               - P0.6 pin is not skipped by the crossbar
 461   1               - P0.7 pin is not skipped by the crossbar
 462   1               ***********************************************************************/
 463   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 464   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 465   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 466   1              // [P0SKIP - Port 0 Skip]$
 467   1      
 468   1      }
 469          
 470          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 471   1              // $[SPI0CKR - SPI0 Clock Rate]
 472   1              /***********************************************************************
 473   1               - SPI0 Clock Rate = 0x0B
 474   1               ***********************************************************************/
 475   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 476   1              // [SPI0CKR - SPI0 Clock Rate]$
 477   1      
 478   1              // $[SPI0CFG - SPI0 Configuration]
 479   1              /***********************************************************************
 480   1               - Enable master mode. Operate as a master
 481   1               ***********************************************************************/
 482   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 483   1              // [SPI0CFG - SPI0 Configuration]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 9   

 484   1      
 485   1              // $[SPI0CN0 - SPI0 Control]
 486   1              /***********************************************************************
 487   1               - Enable the SPI module
 488   1               - 3-Wire Slave or 3-Wire Master Mode
 489   1               ***********************************************************************/
 490   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 491   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 492   1              // [SPI0CN0 - SPI0 Control]$
 493   1      
 494   1      }
 495          
 496          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 497   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 498   1              /***********************************************************************
 499   1               - Disable negative edge capture
 500   1               - Disable CCF0 interrupts
 501   1               - Disable match function
 502   1               - 8-bit PWM selected
 503   1               - Disable positive edge capture
 504   1               - Enable comparator function
 505   1               - Enable PWM function
 506   1               - Disable toggle function
 507   1               ***********************************************************************/
 508   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 509   1                              | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT
 510   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__ENABLED
 511   1                              | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 512   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 513   1      
 514   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 515   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 516   1      
 517   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 518   1              PCA0CPH0 = 0x00;
 519   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 520   1      
 521   1              // $[PCA0 Start/Run restore]
 522   1              // [PCA0 Start/Run restore]$
 523   1      
 524   1      }
 525          
 526          extern void PCACH_1_enter_DefaultMode_from_RESET(void) {
 527   1              // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 528   1              /***********************************************************************
 529   1               - Disable negative edge capture
 530   1               - Disable CCF1 interrupts
 531   1               - Disable match function
 532   1               - 8-bit PWM selected
 533   1               - Disable positive edge capture
 534   1               - Enable comparator function
 535   1               - Enable PWM function
 536   1               - Disable toggle function
 537   1               ***********************************************************************/
 538   1              PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 539   1                              | PCA0CPM1_MAT__DISABLED | PCA0CPM1_PWM16__8_BIT
 540   1                              | PCA0CPM1_CAPP__DISABLED | PCA0CPM1_ECOM__ENABLED
 541   1                              | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 542   1              // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 543   1      
 544   1              // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 545   1              // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 546   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 10  

 547   1              // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 548   1              PCA0CPH1 = 0x00;
 549   1              // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 550   1      
 551   1              // $[PCA0 Start/Run restore]
 552   1              // [PCA0 Start/Run restore]$
 553   1      
 554   1      }
 555          
 556          extern void PCACH_2_enter_DefaultMode_from_RESET(void) {
 557   1              // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 558   1              /***********************************************************************
 559   1               - Disable negative edge capture
 560   1               - Disable CCF2 interrupts
 561   1               - Disable match function
 562   1               - 8-bit PWM selected
 563   1               - Disable positive edge capture
 564   1               - Enable comparator function
 565   1               - Enable PWM function
 566   1               - Disable toggle function
 567   1               ***********************************************************************/
 568   1              PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__DISABLED
 569   1                              | PCA0CPM2_MAT__DISABLED | PCA0CPM2_PWM16__8_BIT
 570   1                              | PCA0CPM2_CAPP__DISABLED | PCA0CPM2_ECOM__ENABLED
 571   1                              | PCA0CPM2_PWM__ENABLED | PCA0CPM2_TOG__DISABLED;
 572   1              // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 573   1      
 574   1              // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 575   1              // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 576   1      
 577   1              // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 578   1              PCA0CPH2 = 0x00;
 579   1              // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 580   1      
 581   1              // $[PCA0 Start/Run restore]
 582   1              // [PCA0 Start/Run restore]$
 583   1      
 584   1      }
 585          
 586          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 587   1              // $[P2 - Port 2 Pin Latch]
 588   1              // [P2 - Port 2 Pin Latch]$
 589   1      
 590   1              // $[P2MDOUT - Port 2 Output Mode]
 591   1              /***********************************************************************
 592   1               - P2.0 output is push-pull
 593   1               - P2.1 output is push-pull
 594   1               - P2.2 output is open-drain
 595   1               - P2.3 output is open-drain
 596   1               - P2.4 output is open-drain
 597   1               - P2.5 output is open-drain
 598   1               - P2.6 output is open-drain
 599   1               - P2.7 output is open-drain
 600   1               ***********************************************************************/
 601   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__PUSH_PULL
 602   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 603   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 604   1                              | P2MDOUT_B6__OPEN_DRAIN | P2MDOUT_B7__OPEN_DRAIN;
 605   1              // [P2MDOUT - Port 2 Output Mode]$
 606   1      
 607   1              // $[P2MDIN - Port 2 Input Mode]
 608   1              /***********************************************************************
 609   1               - P2.0 pin is configured for digital mode
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 11  

 610   1               - P2.1 pin is configured for digital mode
 611   1               - P2.2 pin is configured for digital mode
 612   1               - P2.3 pin is configured for digital mode
 613   1               - P2.4 pin is configured for digital mode
 614   1               - P2.5 pin is configured for analog mode
 615   1               - P2.6 pin is configured for digital mode
 616   1               - P2.7 pin is configured for digital mode
 617   1               ***********************************************************************/
 618   1              P2MDIN = P2MDIN_B0__DIGITAL | P2MDIN_B1__DIGITAL | P2MDIN_B2__DIGITAL
 619   1                              | P2MDIN_B3__DIGITAL | P2MDIN_B4__DIGITAL | P2MDIN_B5__ANALOG
 620   1                              | P2MDIN_B6__DIGITAL | P2MDIN_B7__DIGITAL;
 621   1              // [P2MDIN - Port 2 Input Mode]$
 622   1      
 623   1              // $[P2SKIP - Port 2 Skip]
 624   1              /***********************************************************************
 625   1               - P2.0 pin is not skipped by the crossbar
 626   1               - P2.1 pin is not skipped by the crossbar
 627   1               - P2.2 pin is not skipped by the crossbar
 628   1               - P2.3 pin is not skipped by the crossbar
 629   1               - P2.4 pin is not skipped by the crossbar
 630   1               - P2.5 pin is skipped by the crossbar
 631   1               - P2.6 pin is not skipped by the crossbar
 632   1               - P2.7 pin is not skipped by the crossbar
 633   1               ***********************************************************************/
 634   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 635   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__NOT_SKIPPED
 636   1                              | P2SKIP_B4__NOT_SKIPPED | P2SKIP_B5__SKIPPED
 637   1                              | P2SKIP_B6__NOT_SKIPPED | P2SKIP_B7__NOT_SKIPPED;
 638   1              // [P2SKIP - Port 2 Skip]$
 639   1      
 640   1      }
 641          
 642          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 643   1              // $[ADC0CF - ADC0 Configuration]
 644   1              /***********************************************************************
 645   1               - Data in the ADC0H:ADC0L registers is right-justified
 646   1               - SAR Clock Divider = 0x05
 647   1               ***********************************************************************/
 648   1              ADC0CF = ADC0CF_ADLJST__RIGHT_JUSTIFIED | (0x05 << ADC0CF_ADSC__SHIFT);
 649   1              // [ADC0CF - ADC0 Configuration]$
 650   1      
 651   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 652   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 653   1      
 654   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 655   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 656   1      
 657   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 658   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 659   1      
 660   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 661   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 662   1      
 663   1              // $[AMX0N - AMUX0 Negative Multiplexer Selection]
 664   1              /***********************************************************************
 665   1               - Ground 
 666   1               ***********************************************************************/
 667   1              AMX0N = AMX0N_AMX0N__GND;
 668   1              // [AMX0N - AMUX0 Negative Multiplexer Selection]$
 669   1      
 670   1              // $[AMX0P - AMUX0 Positive Multiplexer Selection]
 671   1              /***********************************************************************
 672   1               - Select ADC0P.4
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 12  

 673   1               ***********************************************************************/
 674   1              AMX0P = AMX0P_AMX0P__ADC0P4;
 675   1              // [AMX0P - AMUX0 Positive Multiplexer Selection]$
 676   1      
 677   1              // $[ADC0CN0 - ADC0 Control]
 678   1              /***********************************************************************
 679   1               - ADC0 Enabled 
 680   1               ***********************************************************************/
 681   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 682   1              // [ADC0CN0 - ADC0 Control]$
 683   1      
 684   1      }
 685          
 686          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 687   1              // $[REF0CN - Voltage Reference Control]
 688   1              /***********************************************************************
 689   1               - Disable the internal Temperature Sensor
 690   1               - Disable the internal reference buffer
 691   1               - The on-chip voltage reference buffer gain is 2
 692   1               - The REFSL bit selects the voltage reference source
 693   1               - Use VDD as the voltage reference
 694   1               ***********************************************************************/
 695   1              REF0CN = REF0CN_TEMPE__DISABLED | REF0CN_REFBE__DISABLED
 696   1                              | REF0CN_REFBGS__GAIN_2 | REF0CN_REGOVR__REFSL | REF0CN_REFSL__VDD;
 697   1              // [REF0CN - Voltage Reference Control]$
 698   1      
 699   1      }
 700          
 701          extern void CIP51_0_enter_DefaultMode_from_RESET(void) {
 702   1              // $[PFE0CN - Prefetch Engine Control]
 703   1              /***********************************************************************
 704   1               - Each byte of a firmware flash write is written individually
 705   1               - Disable the prefetch engine 
 706   1               ***********************************************************************/
 707   1              PFE0CN = PFE0CN_FLBWE__BLOCK_WRITE_DISABLED | PFE0CN_PFEN__DISABLED;
 708   1              // [PFE0CN - Prefetch Engine Control]$
 709   1      
 710   1      }
 711          
 712          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 713   1              // $[Timer Initialization]
 714   1              // Save Timer Configuration
 715   1              uint8_t TMR3CN0_TR3_save;
 716   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 717   1              // Stop Timer
 718   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 719   1              // [Timer Initialization]$
 720   1      
 721   1              // $[TMR3CN0 - Timer 3 Control]
 722   1              // [TMR3CN0 - Timer 3 Control]$
 723   1      
 724   1              // $[TMR3H - Timer 3 High Byte]
 725   1              /***********************************************************************
 726   1               - Timer 3 High Byte = 0xF8
 727   1               ***********************************************************************/
 728   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 729   1              // [TMR3H - Timer 3 High Byte]$
 730   1      
 731   1              // $[TMR3L - Timer 3 Low Byte]
 732   1              /***********************************************************************
 733   1               - Timer 3 Low Byte = 0x30
 734   1               ***********************************************************************/
 735   1              TMR3L = (0x30 << TMR3L_TMR3L__SHIFT);
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 13  

 736   1              // [TMR3L - Timer 3 Low Byte]$
 737   1      
 738   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 739   1              /***********************************************************************
 740   1               - Timer 3 Reload High Byte = 0xF8
 741   1               ***********************************************************************/
 742   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 743   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 744   1      
 745   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 746   1              /***********************************************************************
 747   1               - Timer 3 Reload Low Byte = 0x30
 748   1               ***********************************************************************/
 749   1              TMR3RLL = (0x30 << TMR3RLL_TMR3RLL__SHIFT);
 750   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 751   1      
 752   1              // $[TMR3CN0]
 753   1              /***********************************************************************
 754   1               - Start Timer 3 running
 755   1               ***********************************************************************/
 756   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 757   1              // [TMR3CN0]$
 758   1      
 759   1              // $[Timer Restoration]
 760   1              // Restore Timer Configuration
 761   1              TMR3CN0 |= TMR3CN0_TR3_save;
 762   1              // [Timer Restoration]$
 763   1      
 764   1      }
 765          
 766          extern void PORTS_4_enter_DefaultMode_from_RESET(void) {
 767   1              // $[P4 - Port 4 Pin Latch]
 768   1              // [P4 - Port 4 Pin Latch]$
 769   1      
 770   1              // $[P4MDOUT - Port 4 Output Mode]
 771   1              /***********************************************************************
 772   1               - P4.0 output is push-pull
 773   1               - P4.1 output is push-pull
 774   1               - P4.2 output is push-pull
 775   1               - P4.3 output is open-drain
 776   1               - P4.4 output is open-drain
 777   1               - P4.5 output is open-drain
 778   1               - P4.6 output is open-drain
 779   1               - P4.7 output is open-drain
 780   1               ***********************************************************************/
 781   1              P4MDOUT = P4MDOUT_B0__PUSH_PULL | P4MDOUT_B1__PUSH_PULL
 782   1                              | P4MDOUT_B2__PUSH_PULL | P4MDOUT_B3__OPEN_DRAIN
 783   1                              | P4MDOUT_B4__OPEN_DRAIN | P4MDOUT_B5__OPEN_DRAIN
 784   1                              | P4MDOUT_B6__OPEN_DRAIN | P4MDOUT_B7__OPEN_DRAIN;
 785   1              // [P4MDOUT - Port 4 Output Mode]$
 786   1      
 787   1              // $[P4MDIN - Port 4 Input Mode]
 788   1              // [P4MDIN - Port 4 Input Mode]$
 789   1      
 790   1      }
 791          
 792          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 793   1              // $[P3 - Port 3 Pin Latch]
 794   1              // [P3 - Port 3 Pin Latch]$
 795   1      
 796   1              // $[P3MDOUT - Port 3 Output Mode]
 797   1              /***********************************************************************
 798   1               - P3.0 output is open-drain
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2019 21:26:45 PAGE 14  

 799   1               - P3.1 output is open-drain
 800   1               - P3.2 output is open-drain
 801   1               - P3.3 output is push-pull
 802   1               - P3.4 output is push-pull
 803   1               - P3.5 output is push-pull
 804   1               - P3.6 output is open-drain
 805   1               - P3.7 output is open-drain
 806   1               ***********************************************************************/
 807   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 808   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__PUSH_PULL
 809   1                              | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B5__PUSH_PULL
 810   1                              | P3MDOUT_B6__OPEN_DRAIN | P3MDOUT_B7__OPEN_DRAIN;
 811   1              // [P3MDOUT - Port 3 Output Mode]$
 812   1      
 813   1              // $[P3MDIN - Port 3 Input Mode]
 814   1              // [P3MDIN - Port 3 Input Mode]$
 815   1      
 816   1              // $[P3SKIP - Port 3 Skip]
 817   1              // [P3SKIP - Port 3 Skip]$
 818   1              P3_B4 = 0;
 819   1              P3_B5 = 0;
 820   1              P3_B6 = 0;
 821   1      
 822   1      }
 823          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    303    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
