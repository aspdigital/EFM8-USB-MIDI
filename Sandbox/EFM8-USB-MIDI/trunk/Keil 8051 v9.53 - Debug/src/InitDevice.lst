C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\apeters
                    -.SPECSERV\Projects\EFM8-USB-MIDI\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3)
                    - OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\apeters.SPECSERV\Projects\EFM8-USB-MIDI\
                    -inc;C:\Users\apeters.SPECSERV\Projects\EFM8-USB-MIDI\inc\config;C:\Users\apeters.SPECSERV\Projects\EFM8-USB-MIDI\usb_aud
                    -io\inc;${workspace_loc:/;${workspace_loc:/;C:\Users\apeters.SPECSERV\Projects\EFM8-USB-MIDI\lib\bsp\efm8_memory_lcd\inc;
                    -C:\Users\apeters.SPECSERV\Projects\EFM8-USB-MIDI\lib\bsp\efm8_memory_lcd\inc\config;${workspace_loc:/;${workspace_loc:/C
                    -:\Users\apeters.SPECSERV\Projects\EFM8-USB-MIDI\lib\bsp\efm8_joystick;${workspace_loc:/C:\Users\apeters.SPECSERV\Project
                    -s\EFM8-USB-MIDI\lib\bsp\efm8_rgb_led;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.6//Device/shared/si8051
                    -Base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.6//Device/EFM8UB2/inc;C:/SiliconLabs/SimplicityStudio/v
                    -4/developer/sdks/8051/v4.1.6//Lib/efm8_usb/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.6//Lib/efm8_a
                    -ssert;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.6//kits/common/drivers/efm8_joystick;C:/SiliconLabs/Si
                    -mplicityStudio/v4/developer/sdks/8051/v4.1.6//kits/common/drivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v4
                    -/developer/sdks/8051/v4.1.6//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v4/develop
                    -er/sdks/8051/v4.1.6//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/80
                    -51/v4.1.6//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.6//kits/EFM8UB2_SLSTK2001A/config
                    -;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.6//kits/common/drivers/efm8_rgb_led;C:/SiliconLabs/Simplici
                    -tyStudio/v4/developer/sdks/8051/v4.1.6//Device/EFM8UB2/peripheral_driver/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH
                    -(120) PAGELENGTH(65) OA OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8UB2_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          #include "efm8_usb.h"
  18          #include "descriptors.h"
  19          #include "usb_0.h"
  20          // [Library Includes]$
  21          
  22          //==============================================================================
  23          // enter_DefaultMode_from_RESET
  24          //==============================================================================
  25          extern void enter_DefaultMode_from_RESET(void) {
  26   1              // $[Config Calls]
  27   1              // Save the SFRPAGE
  28   1              uint8_t SFRPAGE_save = SFRPAGE;
  29   1              PCA_0_enter_DefaultMode_from_RESET();
  30   1              PCACH_0_enter_DefaultMode_from_RESET();
  31   1              PCACH_1_enter_DefaultMode_from_RESET();
  32   1              PCACH_2_enter_DefaultMode_from_RESET();
  33   1              PCACH_4_enter_DefaultMode_from_RESET();
  34   1              PORTS_0_enter_DefaultMode_from_RESET();
  35   1              PORTS_1_enter_DefaultMode_from_RESET();
  36   1              PORTS_2_enter_DefaultMode_from_RESET();
  37   1              PORTS_3_enter_DefaultMode_from_RESET();
  38   1              PORTS_4_enter_DefaultMode_from_RESET();
  39   1              PBCFG_0_enter_DefaultMode_from_RESET();
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 2   

  40   1              ADC_0_enter_DefaultMode_from_RESET();
  41   1              VREF_0_enter_DefaultMode_from_RESET();
  42   1              HFOSC_0_enter_DefaultMode_from_RESET();
  43   1              CLOCK_0_enter_DefaultMode_from_RESET();
  44   1              CIP51_0_enter_DefaultMode_from_RESET();
  45   1              TIMER01_0_enter_DefaultMode_from_RESET();
  46   1              TIMER16_3_enter_DefaultMode_from_RESET();
  47   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  48   1              SPI_0_enter_DefaultMode_from_RESET();
  49   1              UART_0_enter_DefaultMode_from_RESET();
  50   1              UARTE_1_enter_DefaultMode_from_RESET();
  51   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  52   1              USBLIB_0_enter_DefaultMode_from_RESET();
  53   1              // Restore the SFRPAGE
  54   1              SFRPAGE = SFRPAGE_save;
  55   1              // [Config Calls]$
  56   1      
  57   1      }
  58          
  59          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
  60   1              // $[PCA0MD - PCA Mode]
  61   1              /***********************************************************************
  62   1               - Disable Watchdog Timer
  63   1               - System clock
  64   1               - PCA continues to function normally while the system controller is in
  65   1               Idle Mode
  66   1               - Disable the CF interrupt
  67   1               - Disable Watchdog Timer
  68   1               - Watchdog Timer Enable unlocked
  69   1               ***********************************************************************/
  70   1              SFRPAGE = 0x00;
  71   1              PCA0MD &= ~PCA0MD_WDTE__BMASK;
  72   1              PCA0MD = PCA0MD_CPS__SYSCLK | PCA0MD_CIDL__NORMAL
  73   1                              | PCA0MD_ECF__OVF_INT_DISABLED | PCA0MD_WDTE__DISABLED
  74   1                              | PCA0MD_WDLCK__UNLOCKED;
  75   1              // [PCA0MD - PCA Mode]$
  76   1      
  77   1              // $[PCA0H - PCA Counter/Timer High Byte]
  78   1              // [PCA0H - PCA Counter/Timer High Byte]$
  79   1      
  80   1              // $[PCA0L - PCA Counter/Timer Low Byte]
  81   1              // [PCA0L - PCA Counter/Timer Low Byte]$
  82   1      
  83   1              // $[PCA0CN0 - PCA Control 0]
  84   1              /***********************************************************************
  85   1               - Start the PCA Counter/Timer running
  86   1               ***********************************************************************/
  87   1              PCA0CN0 |= PCA0CN0_CR__RUN;
  88   1              // [PCA0CN0 - PCA Control 0]$
  89   1      
  90   1      }
  91          
  92          extern void PCACH_4_enter_DefaultMode_from_RESET(void) {
  93   1              // $[PCA0CPM4 - PCA Channel 4 Capture/Compare Mode]
  94   1              /***********************************************************************
  95   1               - Disable negative edge capture
  96   1               - Disable CCF4 interrupts
  97   1               - Enable match function
  98   1               - 8-bit PWM selected
  99   1               - Disable positive edge capture
 100   1               - Disable comparator function
 101   1               - Disable PWM function
 102   1               - Disable toggle function
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 3   

 103   1               ***********************************************************************/
 104   1              PCA0CPM4 = PCA0CPM4_CAPN__DISABLED | PCA0CPM4_ECCF__DISABLED
 105   1                              | PCA0CPM4_MAT__ENABLED | PCA0CPM4_PWM16__8_BIT
 106   1                              | PCA0CPM4_CAPP__DISABLED | PCA0CPM4_ECOM__DISABLED
 107   1                              | PCA0CPM4_PWM__DISABLED | PCA0CPM4_TOG__DISABLED;
 108   1              // [PCA0CPM4 - PCA Channel 4 Capture/Compare Mode]$
 109   1      
 110   1              // $[PCA0CPL4 - PCA Channel 4 Capture Module Low Byte]
 111   1              // [PCA0CPL4 - PCA Channel 4 Capture Module Low Byte]$
 112   1      
 113   1              // $[PCA0CPH4 - PCA Channel 4 Capture Module High Byte]
 114   1              PCA0CPH4 = 0x00;
 115   1              // [PCA0CPH4 - PCA Channel 4 Capture Module High Byte]$
 116   1      
 117   1              // $[PCA0 Start/Run restore]
 118   1              // [PCA0 Start/Run restore]$
 119   1      
 120   1      }
 121          
 122          extern void HFOSC_0_enter_DefaultMode_from_RESET(void) {
 123   1              // $[HFO0CN - High Frequency Oscillator Control]
 124   1              /***********************************************************************
 125   1               - SYSCLK can be derived from Internal H-F Oscillator divided by 1 
 126   1               ***********************************************************************/
 127   1              HFO0CN |= HFO0CN_IFCN__SYSCLK_DIV_1;
 128   1              // [HFO0CN - High Frequency Oscillator Control]$
 129   1      
 130   1      }
 131          
 132          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 133   1              // $[CLKSEL - Clock Select]
 134   1              /***********************************************************************
 135   1               - Clock 
 136   1               - USB clock 
 137   1               - Enabling the Crossbar SYSCLK signal outputs SYSCLK
 138   1               ***********************************************************************/
 139   1              CLKSEL = CLKSEL_CLKSL__HFOSC_DIV_2 | CLKSEL_USBCLK__HFOSC
 140   1                              | CLKSEL_OUTCLK__SYSCLK;
 141   1              // [CLKSEL - Clock Select]$
 142   1      
 143   1      }
 144          
 145          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 146   1              // $[Timer Initialization]
 147   1              //Save Timer Configuration
 148   1              uint8_t TCON_save;
 149   1              TCON_save = TCON;
 150   1              //Stop Timers
 151   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 152   1      
 153   1              // [Timer Initialization]$
 154   1      
 155   1              // $[TH0 - Timer 0 High Byte]
 156   1              /***********************************************************************
 157   1               - Timer 0 High Byte = 0x06
 158   1               ***********************************************************************/
 159   1              TH0 = (0x06 << TH0_TH0__SHIFT);
 160   1              // [TH0 - Timer 0 High Byte]$
 161   1      
 162   1              // $[TL0 - Timer 0 Low Byte]
 163   1              /***********************************************************************
 164   1               - Timer 0 Low Byte = 0x06
 165   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 4   

 166   1              TL0 = (0x06 << TL0_TL0__SHIFT);
 167   1              // [TL0 - Timer 0 Low Byte]$
 168   1      
 169   1              // $[TH1 - Timer 1 High Byte]
 170   1              // [TH1 - Timer 1 High Byte]$
 171   1      
 172   1              // $[TL1 - Timer 1 Low Byte]
 173   1              // [TL1 - Timer 1 Low Byte]$
 174   1      
 175   1              // $[Timer Restoration]
 176   1              //Restore Timer Configuration
 177   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 178   1      
 179   1              // [Timer Restoration]$
 180   1      
 181   1      }
 182          
 183          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 184   1              // $[CKCON0 - Clock Control 0]
 185   1              /***********************************************************************
 186   1               - System clock divided by 48
 187   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 188   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 189   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 190   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 191   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 192   1               - Timer 1 uses the clock defined by the prescale field, SCA
 193   1               ***********************************************************************/
 194   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 195   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 196   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 197   1                              | CKCON0_T1M__PRESCALE;
 198   1              // [CKCON0 - Clock Control 0]$
 199   1      
 200   1              // $[CKCON1 - Clock Control 1]
 201   1              // [CKCON1 - Clock Control 1]$
 202   1      
 203   1              // $[TMOD - Timer 0/1 Mode]
 204   1              /***********************************************************************
 205   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 206   1               - Mode 0, 13-bit Counter/Timer
 207   1               - Timer Mode
 208   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 209   1               - Timer Mode
 210   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 211   1               ***********************************************************************/
 212   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 213   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 214   1              // [TMOD - Timer 0/1 Mode]$
 215   1      
 216   1              // $[TCON - Timer 0/1 Control]
 217   1              /***********************************************************************
 218   1               - Start Timer 0 running
 219   1               ***********************************************************************/
 220   1              TCON |= TCON_TR0__RUN;
 221   1              // [TCON - Timer 0/1 Control]$
 222   1      
 223   1      }
 224          
 225          extern void UARTE_1_enter_DefaultMode_from_RESET(void) {
 226   1              // $[SBCON1 - UART1 Baud Rate Generator Control]
 227   1              /***********************************************************************
 228   1               - Enable the baud rate generator
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 5   

 229   1               - Prescaler = 12
 230   1               ***********************************************************************/
 231   1              SBCON1 = SBCON1_BREN__ENABLED | SBCON1_BPS__DIV_BY_12;
 232   1              // [SBCON1 - UART1 Baud Rate Generator Control]$
 233   1      
 234   1              // $[SMOD1 - UART1 Mode]
 235   1              // [SMOD1 - UART1 Mode]$
 236   1      
 237   1              // $[SBRLH1 - UART1 Baud Rate Generator High Byte]
 238   1              /***********************************************************************
 239   1               - UART1 Baud Rate Reload High = 0xFF
 240   1               ***********************************************************************/
 241   1              SBRLH1 = (0xFF << SBRLH1_BRH__SHIFT);
 242   1              // [SBRLH1 - UART1 Baud Rate Generator High Byte]$
 243   1      
 244   1              // $[SBRLL1 - UART1 Baud Rate Generator Low Byte]
 245   1              /***********************************************************************
 246   1               - UART1 Baud Rate Reload Low = 0xF8
 247   1               ***********************************************************************/
 248   1              SBRLL1 = (0xF8 << SBRLL1_BRL__SHIFT);
 249   1              // [SBRLL1 - UART1 Baud Rate Generator Low Byte]$
 250   1      
 251   1              // $[SCON1 - UART1 Serial Port Control]
 252   1              /***********************************************************************
 253   1               - UART1 reception enabled
 254   1               ***********************************************************************/
 255   1              SCON1 |= SCON1_REN__RECEIVE_ENABLED;
 256   1              // [SCON1 - UART1 Serial Port Control]$
 257   1      
 258   1      }
 259          
 260          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 261   1              // $[EIE1 - Extended Interrupt Enable 1]
 262   1              /***********************************************************************
 263   1               - Disable ADC0 Conversion Complete interrupt
 264   1               - Disable ADC0 Window Comparison interrupt
 265   1               - Disable CP0 interrupts
 266   1               - Disable CP1 interrupts
 267   1               - Disable all PCA0 interrupts
 268   1               - Disable all SMB0 interrupts
 269   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 270   1               - Enable interrupt requests generated by USB0
 271   1               ***********************************************************************/
 272   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 273   1                              | EIE1_ECP1__DISABLED | EIE1_EPCA0__DISABLED | EIE1_ESMB0__DISABLED
 274   1                              | EIE1_ET3__ENABLED | EIE1_EUSB0__ENABLED;
 275   1              // [EIE1 - Extended Interrupt Enable 1]$
 276   1      
 277   1              // $[EIP1 - Extended Interrupt Priority 1]
 278   1              // [EIP1 - Extended Interrupt Priority 1]$
 279   1      
 280   1              // $[IE - Interrupt Enable]
 281   1              /***********************************************************************
 282   1               - Enable each interrupt according to its individual mask setting
 283   1               - Disable external interrupt 0
 284   1               - Disable external interrupt 1
 285   1               - Enable interrupt requests generated by SPI0
 286   1               - Disable all Timer 0 interrupt
 287   1               - Disable all Timer 1 interrupt
 288   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 289   1               - Disable UART0 interrupt
 290   1               ***********************************************************************/
 291   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 6   

 292   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 293   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 294   1              // [IE - Interrupt Enable]$
 295   1      
 296   1              // $[IP - Interrupt Priority]
 297   1              // [IP - Interrupt Priority]$
 298   1      
 299   1              // $[EIE2 - Extended Interrupt Enable 2]
 300   1              // [EIE2 - Extended Interrupt Enable 2]$
 301   1      
 302   1              // $[EIP2 - Extended Interrupt Priority 2]
 303   1              // [EIP2 - Extended Interrupt Priority 2]$
 304   1      
 305   1      }
 306          
 307          extern void USBLIB_0_enter_DefaultMode_from_RESET(void) {
 308   1              // $[USBD Init]
 309   1              USBD_Init (&initstruct);
 310   1              // [USBD Init]$
 311   1      
 312   1      }
 313          
 314          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 315   1              // $[P1 - Port 1 Pin Latch]
 316   1              // [P1 - Port 1 Pin Latch]$
 317   1      
 318   1              // $[P1MDOUT - Port 1 Output Mode]
 319   1              /***********************************************************************
 320   1               - P1.0 output is push-pull
 321   1               - P1.1 output is open-drain
 322   1               - P1.2 output is open-drain
 323   1               - P1.3 output is open-drain
 324   1               - P1.4 output is open-drain
 325   1               - P1.5 output is open-drain
 326   1               - P1.6 output is push-pull
 327   1               - P1.7 output is push-pull
 328   1               ***********************************************************************/
 329   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 330   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 331   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 332   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__PUSH_PULL;
 333   1              // [P1MDOUT - Port 1 Output Mode]$
 334   1      
 335   1              // $[P1MDIN - Port 1 Input Mode]
 336   1              /***********************************************************************
 337   1               - P1.0 pin is configured for digital mode
 338   1               - P1.1 pin is configured for digital mode
 339   1               - P1.2 pin is configured for digital mode
 340   1               - P1.3 pin is configured for digital mode
 341   1               - P1.4 pin is configured for digital mode
 342   1               - P1.5 pin is configured for analog mode
 343   1               - P1.6 pin is configured for digital mode
 344   1               - P1.7 pin is configured for digital mode
 345   1               ***********************************************************************/
 346   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 347   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__ANALOG
 348   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__DIGITAL;
 349   1              // [P1MDIN - Port 1 Input Mode]$
 350   1      
 351   1              // $[P1SKIP - Port 1 Skip]
 352   1              /***********************************************************************
 353   1               - P1.0 pin is not skipped by the crossbar
 354   1               - P1.1 pin is skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 7   

 355   1               - P1.2 pin is skipped by the crossbar
 356   1               - P1.3 pin is skipped by the crossbar
 357   1               - P1.4 pin is skipped by the crossbar
 358   1               - P1.5 pin is skipped by the crossbar
 359   1               - P1.6 pin is not skipped by the crossbar
 360   1               - P1.7 pin is not skipped by the crossbar
 361   1               ***********************************************************************/
 362   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 363   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 364   1                              | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__NOT_SKIPPED;
 365   1              // [P1SKIP - Port 1 Skip]$
 366   1      
 367   1      }
 368          
 369          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 370   1              // $[XBR1 - Port I/O Crossbar 1]
 371   1              /***********************************************************************
 372   1               - Weak Pullups enabled 
 373   1               - Crossbar enabled
 374   1               - CEX0, CEX1, CEX2 routed to Port pins
 375   1               - ECI unavailable at Port pin
 376   1               - T0 unavailable at Port pin
 377   1               - T1 unavailable at Port pin
 378   1               ***********************************************************************/
 379   1              XBR1 = XBR1_WEAKPUD__PULL_UPS_ENABLED | XBR1_XBARE__ENABLED
 380   1                              | XBR1_PCA0ME__CEX0_CEX1_CEX2 | XBR1_ECIE__DISABLED
 381   1                              | XBR1_T0E__DISABLED | XBR1_T1E__DISABLED;
 382   1              // [XBR1 - Port I/O Crossbar 1]$
 383   1      
 384   1              // $[XBR0 - Port I/O Crossbar 0]
 385   1              /***********************************************************************
 386   1               - UART0 I/O unavailable at Port pin
 387   1               - SPI I/O routed to Port pins
 388   1               - SMBus 0 I/O unavailable at Port pins
 389   1               - CP0 unavailable at Port pin
 390   1               - Asynchronous CP0 unavailable at Port pin
 391   1               - CP1 unavailable at Port pin
 392   1               - Asynchronous CP1 unavailable at Port pin
 393   1               - SYSCLK unavailable at Port pin
 394   1               ***********************************************************************/
 395   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 396   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 397   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 398   1              // [XBR0 - Port I/O Crossbar 0]$
 399   1      
 400   1              // $[XBR2 - Port I/O Crossbar 2]
 401   1              // [XBR2 - Port I/O Crossbar 2]$
 402   1      
 403   1      }
 404          
 405          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 406   1              // $[SCON0 - UART0 Serial Port Control]
 407   1              /***********************************************************************
 408   1               - UART0 reception enabled
 409   1               ***********************************************************************/
 410   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 411   1              // [SCON0 - UART0 Serial Port Control]$
 412   1      
 413   1      }
 414          
 415          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 416   1              // $[P0 - Port 0 Pin Latch]
 417   1              // [P0 - Port 0 Pin Latch]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 8   

 418   1      
 419   1              // $[P0MDOUT - Port 0 Output Mode]
 420   1              /***********************************************************************
 421   1               - P0.0 output is push-pull
 422   1               - P0.1 output is push-pull
 423   1               - P0.2 output is open-drain
 424   1               - P0.3 output is open-drain
 425   1               - P0.4 output is open-drain
 426   1               - P0.5 output is open-drain
 427   1               - P0.6 output is push-pull
 428   1               - P0.7 output is open-drain
 429   1               ***********************************************************************/
 430   1              P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__PUSH_PULL
 431   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 432   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 433   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 434   1              // [P0MDOUT - Port 0 Output Mode]$
 435   1      
 436   1              // $[P0MDIN - Port 0 Input Mode]
 437   1              // [P0MDIN - Port 0 Input Mode]$
 438   1      
 439   1              // $[P0SKIP - Port 0 Skip]
 440   1              /***********************************************************************
 441   1               - P0.0 pin is skipped by the crossbar
 442   1               - P0.1 pin is skipped by the crossbar
 443   1               - P0.2 pin is skipped by the crossbar
 444   1               - P0.3 pin is skipped by the crossbar
 445   1               - P0.4 pin is skipped by the crossbar
 446   1               - P0.5 pin is skipped by the crossbar
 447   1               - P0.6 pin is not skipped by the crossbar
 448   1               - P0.7 pin is not skipped by the crossbar
 449   1               ***********************************************************************/
 450   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 451   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 452   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 453   1              // [P0SKIP - Port 0 Skip]$
 454   1      
 455   1      }
 456          
 457          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 458   1              // $[SPI0CKR - SPI0 Clock Rate]
 459   1              /***********************************************************************
 460   1               - SPI0 Clock Rate = 0x0B
 461   1               ***********************************************************************/
 462   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 463   1              // [SPI0CKR - SPI0 Clock Rate]$
 464   1      
 465   1              // $[SPI0CFG - SPI0 Configuration]
 466   1              /***********************************************************************
 467   1               - Enable master mode. Operate as a master
 468   1               ***********************************************************************/
 469   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 470   1              // [SPI0CFG - SPI0 Configuration]$
 471   1      
 472   1              // $[SPI0CN0 - SPI0 Control]
 473   1              /***********************************************************************
 474   1               - Enable the SPI module
 475   1               - 3-Wire Slave or 3-Wire Master Mode
 476   1               ***********************************************************************/
 477   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 478   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 479   1              // [SPI0CN0 - SPI0 Control]$
 480   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 9   

 481   1      }
 482          
 483          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 484   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 485   1              /***********************************************************************
 486   1               - Disable negative edge capture
 487   1               - Disable CCF0 interrupts
 488   1               - Disable match function
 489   1               - 8-bit PWM selected
 490   1               - Disable positive edge capture
 491   1               - Enable comparator function
 492   1               - Enable PWM function
 493   1               - Disable toggle function
 494   1               ***********************************************************************/
 495   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 496   1                              | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT
 497   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__ENABLED
 498   1                              | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 499   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 500   1      
 501   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 502   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 503   1      
 504   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 505   1              PCA0CPH0 = 0x00;
 506   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 507   1      
 508   1              // $[PCA0 Start/Run restore]
 509   1              // [PCA0 Start/Run restore]$
 510   1      
 511   1      }
 512          
 513          extern void PCACH_1_enter_DefaultMode_from_RESET(void) {
 514   1              // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 515   1              /***********************************************************************
 516   1               - Disable negative edge capture
 517   1               - Disable CCF1 interrupts
 518   1               - Disable match function
 519   1               - 8-bit PWM selected
 520   1               - Disable positive edge capture
 521   1               - Enable comparator function
 522   1               - Enable PWM function
 523   1               - Disable toggle function
 524   1               ***********************************************************************/
 525   1              PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 526   1                              | PCA0CPM1_MAT__DISABLED | PCA0CPM1_PWM16__8_BIT
 527   1                              | PCA0CPM1_CAPP__DISABLED | PCA0CPM1_ECOM__ENABLED
 528   1                              | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 529   1              // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 530   1      
 531   1              // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 532   1              // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 533   1      
 534   1              // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 535   1              PCA0CPH1 = 0x00;
 536   1              // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 537   1      
 538   1              // $[PCA0 Start/Run restore]
 539   1              // [PCA0 Start/Run restore]$
 540   1      
 541   1      }
 542          
 543          extern void PCACH_2_enter_DefaultMode_from_RESET(void) {
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 10  

 544   1              // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 545   1              /***********************************************************************
 546   1               - Disable negative edge capture
 547   1               - Disable CCF2 interrupts
 548   1               - Disable match function
 549   1               - 8-bit PWM selected
 550   1               - Disable positive edge capture
 551   1               - Enable comparator function
 552   1               - Enable PWM function
 553   1               - Disable toggle function
 554   1               ***********************************************************************/
 555   1              PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__DISABLED
 556   1                              | PCA0CPM2_MAT__DISABLED | PCA0CPM2_PWM16__8_BIT
 557   1                              | PCA0CPM2_CAPP__DISABLED | PCA0CPM2_ECOM__ENABLED
 558   1                              | PCA0CPM2_PWM__ENABLED | PCA0CPM2_TOG__DISABLED;
 559   1              // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 560   1      
 561   1              // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 562   1              // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 563   1      
 564   1              // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 565   1              PCA0CPH2 = 0x00;
 566   1              // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 567   1      
 568   1              // $[PCA0 Start/Run restore]
 569   1              // [PCA0 Start/Run restore]$
 570   1      
 571   1      }
 572          
 573          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 574   1              // $[P2 - Port 2 Pin Latch]
 575   1              // [P2 - Port 2 Pin Latch]$
 576   1      
 577   1              // $[P2MDOUT - Port 2 Output Mode]
 578   1              /***********************************************************************
 579   1               - P2.0 output is push-pull
 580   1               - P2.1 output is open-drain
 581   1               - P2.2 output is open-drain
 582   1               - P2.3 output is open-drain
 583   1               - P2.4 output is open-drain
 584   1               - P2.5 output is open-drain
 585   1               - P2.6 output is open-drain
 586   1               - P2.7 output is open-drain
 587   1               ***********************************************************************/
 588   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN
 589   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 590   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 591   1                              | P2MDOUT_B6__OPEN_DRAIN | P2MDOUT_B7__OPEN_DRAIN;
 592   1              // [P2MDOUT - Port 2 Output Mode]$
 593   1      
 594   1              // $[P2MDIN - Port 2 Input Mode]
 595   1              /***********************************************************************
 596   1               - P2.0 pin is configured for digital mode
 597   1               - P2.1 pin is configured for digital mode
 598   1               - P2.2 pin is configured for digital mode
 599   1               - P2.3 pin is configured for digital mode
 600   1               - P2.4 pin is configured for digital mode
 601   1               - P2.5 pin is configured for analog mode
 602   1               - P2.6 pin is configured for digital mode
 603   1               - P2.7 pin is configured for digital mode
 604   1               ***********************************************************************/
 605   1              P2MDIN = P2MDIN_B0__DIGITAL | P2MDIN_B1__DIGITAL | P2MDIN_B2__DIGITAL
 606   1                              | P2MDIN_B3__DIGITAL | P2MDIN_B4__DIGITAL | P2MDIN_B5__ANALOG
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 11  

 607   1                              | P2MDIN_B6__DIGITAL | P2MDIN_B7__DIGITAL;
 608   1              // [P2MDIN - Port 2 Input Mode]$
 609   1      
 610   1              // $[P2SKIP - Port 2 Skip]
 611   1              /***********************************************************************
 612   1               - P2.0 pin is not skipped by the crossbar
 613   1               - P2.1 pin is not skipped by the crossbar
 614   1               - P2.2 pin is not skipped by the crossbar
 615   1               - P2.3 pin is not skipped by the crossbar
 616   1               - P2.4 pin is not skipped by the crossbar
 617   1               - P2.5 pin is skipped by the crossbar
 618   1               - P2.6 pin is not skipped by the crossbar
 619   1               - P2.7 pin is not skipped by the crossbar
 620   1               ***********************************************************************/
 621   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 622   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__NOT_SKIPPED
 623   1                              | P2SKIP_B4__NOT_SKIPPED | P2SKIP_B5__SKIPPED
 624   1                              | P2SKIP_B6__NOT_SKIPPED | P2SKIP_B7__NOT_SKIPPED;
 625   1              // [P2SKIP - Port 2 Skip]$
 626   1      
 627   1      }
 628          
 629          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 630   1              // $[ADC0CF - ADC0 Configuration]
 631   1              /***********************************************************************
 632   1               - Data in the ADC0H:ADC0L registers is right-justified
 633   1               - SAR Clock Divider = 0x05
 634   1               ***********************************************************************/
 635   1              ADC0CF = ADC0CF_ADLJST__RIGHT_JUSTIFIED | (0x05 << ADC0CF_ADSC__SHIFT);
 636   1              // [ADC0CF - ADC0 Configuration]$
 637   1      
 638   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 639   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 640   1      
 641   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 642   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 643   1      
 644   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 645   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 646   1      
 647   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 648   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 649   1      
 650   1              // $[AMX0N - AMUX0 Negative Multiplexer Selection]
 651   1              /***********************************************************************
 652   1               - Ground 
 653   1               ***********************************************************************/
 654   1              AMX0N = AMX0N_AMX0N__GND;
 655   1              // [AMX0N - AMUX0 Negative Multiplexer Selection]$
 656   1      
 657   1              // $[AMX0P - AMUX0 Positive Multiplexer Selection]
 658   1              /***********************************************************************
 659   1               - Select ADC0P.4
 660   1               ***********************************************************************/
 661   1              AMX0P = AMX0P_AMX0P__ADC0P4;
 662   1              // [AMX0P - AMUX0 Positive Multiplexer Selection]$
 663   1      
 664   1              // $[ADC0CN0 - ADC0 Control]
 665   1              /***********************************************************************
 666   1               - ADC0 Enabled 
 667   1               ***********************************************************************/
 668   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 669   1              // [ADC0CN0 - ADC0 Control]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 12  

 670   1      
 671   1      }
 672          
 673          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 674   1              // $[REF0CN - Voltage Reference Control]
 675   1              /***********************************************************************
 676   1               - Disable the internal Temperature Sensor
 677   1               - Disable the internal reference buffer
 678   1               - The on-chip voltage reference buffer gain is 2
 679   1               - The REFSL bit selects the voltage reference source
 680   1               - Use VDD as the voltage reference
 681   1               ***********************************************************************/
 682   1              REF0CN = REF0CN_TEMPE__DISABLED | REF0CN_REFBE__DISABLED
 683   1                              | REF0CN_REFBGS__GAIN_2 | REF0CN_REGOVR__REFSL | REF0CN_REFSL__VDD;
 684   1              // [REF0CN - Voltage Reference Control]$
 685   1      
 686   1      }
 687          
 688          extern void CIP51_0_enter_DefaultMode_from_RESET(void) {
 689   1              // $[PFE0CN - Prefetch Engine Control]
 690   1              /***********************************************************************
 691   1               - Each byte of a firmware flash write is written individually
 692   1               - Disable the prefetch engine 
 693   1               ***********************************************************************/
 694   1              PFE0CN = PFE0CN_FLBWE__BLOCK_WRITE_DISABLED | PFE0CN_PFEN__DISABLED;
 695   1              // [PFE0CN - Prefetch Engine Control]$
 696   1      
 697   1      }
 698          
 699          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 700   1              // $[Timer Initialization]
 701   1              // Save Timer Configuration
 702   1              uint8_t TMR3CN0_TR3_save;
 703   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 704   1              // Stop Timer
 705   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 706   1              // [Timer Initialization]$
 707   1      
 708   1              // $[TMR3CN0 - Timer 3 Control]
 709   1              // [TMR3CN0 - Timer 3 Control]$
 710   1      
 711   1              // $[TMR3H - Timer 3 High Byte]
 712   1              /***********************************************************************
 713   1               - Timer 3 High Byte = 0xF8
 714   1               ***********************************************************************/
 715   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 716   1              // [TMR3H - Timer 3 High Byte]$
 717   1      
 718   1              // $[TMR3L - Timer 3 Low Byte]
 719   1              /***********************************************************************
 720   1               - Timer 3 Low Byte = 0x30
 721   1               ***********************************************************************/
 722   1              TMR3L = (0x30 << TMR3L_TMR3L__SHIFT);
 723   1              // [TMR3L - Timer 3 Low Byte]$
 724   1      
 725   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 726   1              /***********************************************************************
 727   1               - Timer 3 Reload High Byte = 0xF8
 728   1               ***********************************************************************/
 729   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 730   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 731   1      
 732   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 13  

 733   1              /***********************************************************************
 734   1               - Timer 3 Reload Low Byte = 0x30
 735   1               ***********************************************************************/
 736   1              TMR3RLL = (0x30 << TMR3RLL_TMR3RLL__SHIFT);
 737   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 738   1      
 739   1              // $[TMR3CN0]
 740   1              /***********************************************************************
 741   1               - Start Timer 3 running
 742   1               ***********************************************************************/
 743   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 744   1              // [TMR3CN0]$
 745   1      
 746   1              // $[Timer Restoration]
 747   1              // Restore Timer Configuration
 748   1              TMR3CN0 |= TMR3CN0_TR3_save;
 749   1              // [Timer Restoration]$
 750   1      
 751   1      }
 752          
 753          extern void PORTS_4_enter_DefaultMode_from_RESET(void) {
 754   1              // $[P4 - Port 4 Pin Latch]
 755   1              // [P4 - Port 4 Pin Latch]$
 756   1      
 757   1              // $[P4MDOUT - Port 4 Output Mode]
 758   1              /***********************************************************************
 759   1               - P4.0 output is push-pull
 760   1               - P4.1 output is push-pull
 761   1               - P4.2 output is push-pull
 762   1               - P4.3 output is open-drain
 763   1               - P4.4 output is open-drain
 764   1               - P4.5 output is open-drain
 765   1               - P4.6 output is open-drain
 766   1               - P4.7 output is open-drain
 767   1               ***********************************************************************/
 768   1              P4MDOUT = P4MDOUT_B0__PUSH_PULL | P4MDOUT_B1__PUSH_PULL
 769   1                              | P4MDOUT_B2__PUSH_PULL | P4MDOUT_B3__OPEN_DRAIN
 770   1                              | P4MDOUT_B4__OPEN_DRAIN | P4MDOUT_B5__OPEN_DRAIN
 771   1                              | P4MDOUT_B6__OPEN_DRAIN | P4MDOUT_B7__OPEN_DRAIN;
 772   1              // [P4MDOUT - Port 4 Output Mode]$
 773   1      
 774   1              // $[P4MDIN - Port 4 Input Mode]
 775   1              // [P4MDIN - Port 4 Input Mode]$
 776   1      
 777   1      }
 778          
 779          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 780   1              // $[P3 - Port 3 Pin Latch]
 781   1              // [P3 - Port 3 Pin Latch]$
 782   1      
 783   1              // $[P3MDOUT - Port 3 Output Mode]
 784   1              /***********************************************************************
 785   1               - P3.0 output is open-drain
 786   1               - P3.1 output is open-drain
 787   1               - P3.2 output is open-drain
 788   1               - P3.3 output is push-pull
 789   1               - P3.4 output is push-pull
 790   1               - P3.5 output is push-pull
 791   1               - P3.6 output is open-drain
 792   1               - P3.7 output is open-drain
 793   1               ***********************************************************************/
 794   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 795   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__PUSH_PULL
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2019 17:13:50 PAGE 14  

 796   1                              | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B5__PUSH_PULL
 797   1                              | P3MDOUT_B6__OPEN_DRAIN | P3MDOUT_B7__OPEN_DRAIN;
 798   1              // [P3MDOUT - Port 3 Output Mode]$
 799   1      
 800   1              // $[P3MDIN - Port 3 Input Mode]
 801   1              // [P3MDIN - Port 3 Input Mode]$
 802   1      
 803   1              // $[P3SKIP - Port 3 Skip]
 804   1              // [P3SKIP - Port 3 Skip]$
 805   1              P3_B4 = 0;
 806   1              P3_B5 = 0;
 807   1              P3_B6 = 0;
 808   1      
 809   1      }
 810          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    300    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
